1.Write a query to fetch and displaythe number of studentsenrolled for modules on a specific date grouped by start date and display start date and total number of students.

Ans. Select start_date,count(student_id) from  student_status group by start_date;

2.Write a query to fetch and displaythe number of students enrolled for modules where facultyid is ‘F001’ grouped by start date and display start date and total number of students.

Ans. Select start_date , count(student_id) from student_status where faculty_id='F001' group by start_date ;


3.Write a query to fetch and displaythe number of students enrolled for modules where facultyid is ‘F001’ grouped by module start date and display module start date and total number of students where the total number of students> 2.

Ans. Select start_date , count(student_id) from student_status where faculty_id='F001' group by start_date having count(student_id)>2;

4.Write a query to fetch and displayall the modules in ascending order of module duration.

Ans. Select module_name,module_duration from moduledetails order by module_duration;

5.Write aquery to fetch and displaythe student’sname, their module enrolled (module name and module id). Order them according to their name.

Ans. Select student_name, module_name, s.module_id from student.student_status s
 join student.studentdetails t 
on s.student_id=t.student_id
 join faculty.moduledetails f 
     on s.module_id=f.module_id;
	

6.Write a query to fetch and display faculty_id and batch_id which will fetch all the combinations of facultyIDs and batch IDs.

Ans. Select  f.faculty_id, b.batch_id from facultydetails f cross join batchdetails b;

7.Write a query to fetch and displaythe records of all the details from Student_Status and batch_info, wherever batch_id is common in both the tables.

Ans. Select * from student.student_status s inner join faculty.batchdetails f on s.batch_id= f.batch_id;

8.Write a query to fetch and display the student IDs of the students tagged to faculty and all the faculty IDs irrespective of whether there are any students tagged to them or not. Hint: Use Student_status and FacultyDetails tables and Right Outer Join

Ans. Select s.student_id,f.faculty_id from student.student_status s right outer join  faculty.facultydetails s on s.faculty_id=f.faculty_id;

9.Write a query to fetch and display the studentIDs of the students tagged to facultiesand all the faculty IDs irrespective of whether there are any faculties tagged to them or not. 
Hint: Use Student_status and FacultyDetails tables and LeftOuter Join

Ans. Select s.student_id,f.faculty_id from student.student_status s left outer join  faculty.facultydetails s on s.faculty_id=f.faculty_id; 

10.Write a query to fetch and displaythe student IDs ofall the students and faculty IDs of all faculties irrespective of whetherthese is any association between students and faculty Ids and vice versa.Hint: Use Student_status and FacultyDetails tables and FullOuter Jointhough full outer join is not supported by MYSQL we have to find out a way to implement that.

Ans. Select s.student_id,f.faculty_id from student.student_status s left outer join  faculty.facultydetails s on s.faculty_id=f.faculty_id

     UNION

     Select s.student_id,f.faculty_id from student.student_status s right outer join  faculty.facultydetails s on s.faculty_id=f.faculty_id;